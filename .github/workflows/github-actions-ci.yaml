name: Express API deploy to EKS
on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install kubectl
        uses: azure/setup-kubectl@v2.0
        with:
          version: 'v1.27.0' # default is the latest stable.
        id: install

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Run create ecr repo script
        run: |
          chmod +x create-ecr-stack.sh
          bash create-ecr-stack.sh
          ECR_REPO_ARN=$(aws ecr describe-repositories --repository-names expressapi-repo --query 'repositories[0].repositoryArn' --output text)
          echo "::set-output name=ecr-repo-arn::$ECR_REPO_ARN"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: expressapi-repo
          IMAGE_TAG: 1.0
        run: |
          chmod 644 src/package.json
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -f src/Dockerfile .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "::set-output name=registry::$REGISTRY"
          echo "::set-output name=repository::$REPOSITORY"
          echo "::set-output name=image-tag::$IMAGE_TAG"

      - name: Update Deployment YAML
        run: |
          REGISTRY_LOWERCASE=$(echo "${{ steps.build-ecr.outputs.registry }}" | tr '[:upper:]' '[:lower:]')
          REPOSITORY_LOWERCASE=$(echo "${{ steps.build-ecr.outputs.repository }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_TAG_LOWERCASE=$(echo "${{ steps.build-ecr.outputs.image-tag }}" | tr '[:upper:]' '[:lower:]')
          sed -i "s|{{REGISTRY}}|${REGISTRY_LOWERCASE}|g" deployment.yaml
          sed -i "s|{{REPOSITORY}}|${REPOSITORY_LOWERCASE}|g" deployment.yaml
          sed -i "s|{{IMAGE_TAG}}|${IMAGE_TAG_LOWERCASE}|g" deployment.yaml

      - name: Display deployment.yaml content
        run: |
          cat deployment.yaml

      - name: Update kube config
        run: aws eks update-kubeconfig --name ExpressApi-EKSCluster

      - name: Deploy to EKS
        run: |
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml
